{"version":3,"sources":["components/GlobalCards/GlobalCards.module.scss","components/Chart/Active/ActiveLineChart.js","components/Chart/Active/ActiveBarChart.js","components/Chart/Active/ActiveChart.js","components/Chart/Confirmed/ConfirmBarChart.js","components/Chart/Confirmed/ConfirmLineChart.js","components/Chart/Confirmed/ConfirmChart.js","components/Chart/Death/DeathBarChart.js","components/Chart/Death/DeathLineChart.js","components/Chart/Death/DeathChart.js","components/Chart/Recovered/RecoveredBarChart.js","components/Chart/Recovered/RecoveredLineChart.js","components/Chart/Recovered/RecoveredChart.js","components/Chart/Chart.jsx","components/Country/Country.jsx","components/GlobalCards/GlobalCards.jsx","components/StateCards/StateCards.jsx","Api/index.js","store/Action.js","components/Table/Table.jsx","components/Home/Home.jsx","App.js","serviceWorker.js","store/Reducer.js","index.js","components/Chart/Chart.module.scss","components/Home/Home.module.css","components/Table/Table.module.scss","components/Country/Country.module.scss","components/StateCards/StateCards.module.scss","App.module.css"],"names":["module","exports","ActiveLineChart","chartData","className","styles","chart__activeChart","data","labels","date","datasets","culmativeActive","label","backgroundColor","options","scales","xAxes","stacked","gridLines","display","drawBorder","drawOnChartArea","drawTicks","zeroLineColor","tickMarkLength","ticks","fontSize","autoSkip","maxRotation","maxTicksLimit","stepSize","fontColor","yAxes","position","beginAtZero","legend","align","tooltips","enabled","layout","padding","left","right","top","bottom","ActiveBarChart","dailyActive","ActiveChart","props","dailyGraph","ConfirmBarChart","chart__confirmChart","dailyConfirmed","ConfirmLineChart","culmativeConfirmed","ConfirmChart","DeathBarChart","chart__deathChart","dailyDeceased","DeathLineChart","culmativeDeceased","DeathChart","RecoveredBarChart","chart__recoveredChart","dailyRecovered","RecoveredLineChart","culmativeRecovered","RecoveredChart","Chart","useSelector","state","singleChartData","useState","setDailyGraph","chart","chart__header","chart__button","Button","variant","onClick","Country","Search","GlobalCards","globalCardData","setGlobalCardData","globalData","useEffect","GlobalCards__date","Date","toDateString","GlobalCards__caseDetails","confirmed","deltaconfirmed","active","recovered","deltarecovered","deceased","deltadeaths","deaths","StateCards","stateCardData","setStateCardData","stateCardSelector","singleStateData","stateCard","stateCard__header","stateCard__sub_header","map_stats","card","cx","card__section","confirm","death","fetchAllAPI","a","axios","get","cases_time_series","statewise","states_daily","ModifiedData","tillDateData","stateData","stateWiseDailyData","console","log","setChartData","stateName","dispatch","stateDailyData","previousDate","map","val","indexOf","push","name","toLowerCase","status","parseInt","length","i","type","Tables","allStateData","useDispatch","CountUpComponent","start","end","separator","onHover","e","setSingleStateData","statecode","table__header","heading_content","key","onMouseEnter","deltaConfirmed","deltaRecovered","deltaDeacesed","Home","then","res","catch","err","homeLeft","Table","homeRight","App","container","Component","Boolean","window","location","hostname","match","initialState","Reducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bec43d30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GlobalCards\":\"GlobalCards_GlobalCards__c2gWR\",\"GlobalCards__date\":\"GlobalCards_GlobalCards__date__2jUrG\",\"GlobalCards__caseDetails\":\"GlobalCards_GlobalCards__caseDetails__3kdgc\",\"confirmed\":\"GlobalCards_confirmed__2qizR\",\"active\":\"GlobalCards_active__1bEpM\",\"recovered\":\"GlobalCards_recovered__3aLQp\",\"deceased\":\"GlobalCards_deceased__3e-UY\"};","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from \"../Chart.module.scss\";\n\nfunction ActiveLineChart({ chartData }) {\n  const Options = {\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            zeroLineColor: \"rgba(0, 123, 255, 1)\",\n            tickMarkLength: 20,\n          },\n          ticks: {\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 7,\n            fontColor: \"rgba(0, 123, 255, 1)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          position: \"right\",\n          gridLines: {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickMarkLength: 20,\n            zeroLineColor: \"rgba(0, 123, 255, 1)\",\n          },\n          ticks: {\n            beginAtZero: false,\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 5,\n            fontColor: \"rgba(0, 123, 255, 1)\",\n          },\n        },\n      ],\n    },\n    legend: {\n      display: true,\n      position: \"top\",\n      align: \"start\",\n      labels: {\n        fontColor: \"rgba(0, 123, 255, 1)\",\n      },\n    },\n    tooltips: {\n      enabled: true,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n  };\n  return (\n    <div className={styles.chart__activeChart}>\n      {chartData ? (\n        <Line\n          data={{\n            labels: chartData.date,\n            datasets: [\n              {\n                data: chartData.culmativeActive,\n                label: \"Active\",\n                backgroundColor: \"rgba(0, 123, 255, 1)\",\n              },\n            ],\n          }}\n          options={Options}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default ActiveLineChart;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styles from \"../Chart.module.scss\";\n\nfunction ActiveBarChart({ chartData }) {\n  const Options = {\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            zeroLineColor: \"rgba(0, 123, 255, 1)\",\n            tickMarkLength: 20,\n          },\n          ticks: {\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 7,\n            fontColor: \"rgba(0, 123, 255, 1)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          position: \"right\",\n          gridLines: {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickMarkLength: 20,\n            zeroLineColor: \"rgba(0, 123, 255, 1)\",\n          },\n          ticks: {\n            beginAtZero: false,\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 5,\n            fontColor: \"rgba(0, 123, 255, 1)\",\n          },\n        },\n      ],\n    },\n    legend: {\n      display: true,\n      position: \"top\",\n      align: \"start\",\n      labels: {\n        fontColor: \"rgba(0, 123, 255, 1)\",\n      },\n    },\n    tooltips: {\n      enabled: true,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n  };\n  return (\n    <div className={styles.chart__activeChart}>\n      {chartData ? (\n        <Bar\n          data={{\n            labels: chartData.date,\n            datasets: [\n              {\n                data: chartData.dailyActive,\n                label: \"Active\",\n                backgroundColor: \"rgba(0, 123, 255, 1)\",\n              },\n            ],\n          }}\n          options={Options}\n        />\n      ) : (\n        \"Charts\"\n      )}\n    </div>\n  );\n}\n\nexport default ActiveBarChart;\n","import React from \"react\";\nimport ActiveLineChart from \"./ActiveLineChart\";\nimport ActiveBarChart from \"./ActiveBarChart\";\n\nfunction ActiveChart(props) {\n  const chartData = props.chartData;\n  return (\n    <div>\n      {props.dailyGraph ? (\n        <ActiveBarChart chartData={chartData} />\n      ) : (\n        <ActiveLineChart chartData={chartData} />\n      )}\n    </div>\n  );\n}\n\nexport default ActiveChart;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styles from \"../Chart.module.scss\";\n\nfunction ConfirmBarChart({ chartData }) {\n  const Options = {\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            zeroLineColor: \"rgba(255, 7, 58, 1)\",\n            tickMarkLength: 20,\n          },\n          ticks: {\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 7,\n            fontColor: \"rgba(255, 7, 58, 1)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          position: \"right\",\n          gridLines: {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickMarkLength: 20,\n            zeroLineColor: \"rgba(255, 7, 58, 1)\",\n          },\n          ticks: {\n            beginAtZero: false,\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 5,\n            fontColor: \"rgba(255, 7, 58, 1)\",\n          },\n        },\n      ],\n    },\n    legend: {\n      display: true,\n      position: \"top\",\n      align: \"start\",\n      labels: {\n        fontColor: \"rgba(255, 7, 58, 1)\",\n      },\n    },\n    tooltips: {\n      enabled: true,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n  };\n  return (\n    <div className={styles.chart__confirmChart}>\n      {chartData ? (\n        <Bar\n          data={{\n            labels: chartData.date,\n            datasets: [\n              {\n                data: chartData.dailyConfirmed,\n                label: \"Confirmed\",\n                backgroundColor: \"rgba(255, 7, 58, 1)\",\n              },\n            ],\n          }}\n          options={Options}\n        />\n      ) : (\n        \"Charts\"\n      )}\n    </div>\n  );\n}\n\nexport default ConfirmBarChart;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from \"../Chart.module.scss\";\n\nfunction ConfirmLineChart({ chartData }) {\n  const Options = {\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            zeroLineColor: \"rgba(255, 7, 58, 1)\",\n            tickMarkLength: 20,\n          },\n          ticks: {\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 7,\n            fontColor: \"rgba(255, 7, 58, 1)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          position: \"right\",\n          gridLines: {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickMarkLength: 20,\n            zeroLineColor: \"rgba(255, 7, 58, 1)\",\n          },\n          ticks: {\n            beginAtZero: false,\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 5,\n            fontColor: \"rgba(255, 7, 58, 1)\",\n          },\n        },\n      ],\n    },\n    legend: {\n      display: true,\n      position: \"top\",\n      align: \"start\",\n      labels: {\n        fontColor: \"rgba(255, 7, 58, 1)\",\n      },\n    },\n    tooltips: {\n      enabled: true,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n  };\n  return (\n    <div className={styles.chart__confirmChart}>\n      {chartData ? (\n        <Line\n          data={{\n            labels: chartData.date,\n            datasets: [\n              {\n                data: chartData.culmativeConfirmed,\n                label: \"Confirmed\",\n                backgroundColor: \"rgba(255, 7, 58, 1)\",\n              },\n            ],\n          }}\n          options={Options}\n        />\n      ) : (\n        \"Charts\"\n      )}\n    </div>\n  );\n}\n\nexport default ConfirmLineChart;\n","import React from \"react\";\nimport ConfirmBarChart from \"./ConfirmBarChart\";\nimport ConfirmLineChart from \"./ConfirmLineChart\";\nfunction ConfirmChart(props) {\n  const chartData = props.chartData;\n  return (\n    <div>\n      {props.dailyGraph ? (\n        <ConfirmBarChart chartData={chartData} />\n      ) : (\n        <ConfirmLineChart chartData={chartData} />\n      )}\n    </div>\n  );\n}\n\nexport default ConfirmChart;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styles from \"../Chart.module.scss\";\n\nfunction DeathBarChart({ chartData }) {\n  const Options = {\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            zeroLineColor: \"rgba(108, 117, 125, 1)\",\n            tickMarkLength: 20,\n          },\n          ticks: {\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 7,\n            fontColor: \"rgba(108, 117, 125, 1)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          position: \"right\",\n          gridLines: {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickMarkLength: 20,\n            zeroLineColor: \"rgba(108, 117, 125, 1)\",\n          },\n          ticks: {\n            beginAtZero: false,\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 5,\n            fontColor: \"rgba(108, 117, 125, 1)\",\n          },\n        },\n      ],\n    },\n    legend: {\n      display: true,\n      position: \"top\",\n      align: \"start\",\n      labels: {\n        fontColor: \"rgba(108, 117, 125, 1)\",\n      },\n    },\n    tooltips: {\n      enabled: true,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n  };\n  return (\n    <div className={styles.chart__deathChart}>\n      {chartData ? (\n        <Bar\n          data={{\n            labels: chartData.date,\n            datasets: [\n              {\n                data: chartData.dailyDeceased,\n                label: \"Deceased\",\n                backgroundColor: \"rgba(108, 117, 125, 1)\",\n              },\n            ],\n          }}\n          options={Options}\n        />\n      ) : (\n        \"Charts\"\n      )}\n    </div>\n  );\n}\n\nexport default DeathBarChart;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from \"../Chart.module.scss\";\n\nfunction DeathLineChart({ chartData }) {\n  const Options = {\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            zeroLineColor: \"rgba(108, 117, 125, 1)\",\n            tickMarkLength: 20,\n          },\n          ticks: {\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 7,\n            fontColor: \"rgba(108, 117, 125, 1)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          position: \"right\",\n          gridLines: {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickMarkLength: 20,\n            zeroLineColor: \"rgba(108, 117, 125, 1)\",\n          },\n          ticks: {\n            beginAtZero: false,\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 5,\n            fontColor: \"rgba(108, 117, 125, 1)\",\n          },\n        },\n      ],\n    },\n    legend: {\n      display: true,\n      position: \"top\",\n      align: \"start\",\n      labels: {\n        fontColor: \"rgba(108, 117, 125, 1)\",\n      },\n    },\n    tooltips: {\n      enabled: true,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n  };\n  return (\n    <div className={styles.chart__deathChart}>\n      {chartData ? (\n        <Line\n          data={{\n            labels: chartData.date,\n            datasets: [\n              {\n                data: chartData.culmativeDeceased,\n                label: \"Deceased\",\n                backgroundColor: \"rgba(108, 117, 125, 1)\",\n              },\n            ],\n          }}\n          options={Options}\n        />\n      ) : (\n        \"Charts\"\n      )}\n    </div>\n  );\n}\n\nexport default DeathLineChart;\n","import React from \"react\";\nimport DeathBarChart from \"./DeathBarChart\";\nimport DeathLineChart from \"./DeathLineChart\";\n\nfunction DeathChart(props) {\n  const chartData = props.chartData;\n  return (\n    <div>\n      {props.dailyGraph ? (\n        <DeathBarChart chartData={chartData} />\n      ) : (\n        <DeathLineChart chartData={chartData} />\n      )}\n    </div>\n  );\n}\n\nexport default DeathChart;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport styles from \"../Chart.module.scss\";\n\nfunction RecoveredBarChart({ chartData }) {\n  const Options = {\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            zeroLineColor: \"rgba(40, 167, 69, 1)\",\n            tickMarkLength: 20,\n          },\n          ticks: {\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 7,\n            fontColor: \"rgba(40, 167, 69, 1)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          position: \"right\",\n          gridLines: {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickMarkLength: 20,\n            zeroLineColor: \"rgba(40, 167, 69, 1)\",\n          },\n          ticks: {\n            beginAtZero: false,\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 5,\n            fontColor: \"rgba(40, 167, 69, 1)\",\n          },\n        },\n      ],\n    },\n    legend: {\n      display: true,\n      position: \"top\",\n      align: \"start\",\n      labels: {\n        fontColor: \"rgba(40, 167, 69, 1)\",\n      },\n    },\n    tooltips: {\n      enabled: true,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n  };\n  return (\n    <div className={styles.chart__recoveredChart}>\n      {chartData ? (\n        <Bar\n          data={{\n            labels: chartData.date,\n            datasets: [\n              {\n                data: chartData.dailyRecovered,\n                label: \"Recovered\",\n                backgroundColor: \"rgba(40, 167, 69, 1)\",\n              },\n            ],\n          }}\n          options={Options}\n        />\n      ) : (\n        \"Charts\"\n      )}\n    </div>\n  );\n}\n\nexport default RecoveredBarChart;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport styles from \"../Chart.module.scss\";\n\nfunction RecoveredLineChart({ chartData }) {\n  const Options = {\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            display: false,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            zeroLineColor: \"rgba(40, 167, 69, 1)\",\n            tickMarkLength: 20,\n          },\n          ticks: {\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 7,\n            fontColor: \"rgba(40, 167, 69, 1)\",\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          position: \"right\",\n          gridLines: {\n            display: true,\n            drawBorder: true,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickMarkLength: 20,\n            zeroLineColor: \"rgba(40, 167, 69, 1)\",\n          },\n          ticks: {\n            beginAtZero: false,\n            fontSize: 10,\n            autoSkip: true,\n            maxRotation: 0,\n            maxTicksLimit: 5,\n            stepSize: 5,\n            fontColor: \"rgba(40, 167, 69, 1)\",\n          },\n        },\n      ],\n    },\n    legend: {\n      display: true,\n      position: \"top\",\n      align: \"start\",\n      labels: {\n        fontColor: \"rgba(40, 167, 69, 1)\",\n      },\n    },\n    tooltips: {\n      enabled: true,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n  };\n  return (\n    <div className={styles.chart__recoveredChart}>\n      {chartData ? (\n        <Line\n          data={{\n            labels: chartData.date,\n            datasets: [\n              {\n                data: chartData.culmativeRecovered,\n                label: \"Recovered\",\n                backgroundColor: \"rgba(40, 167, 69, 1)\",\n              },\n            ],\n          }}\n          options={Options}\n        />\n      ) : (\n        \"Charts\"\n      )}\n    </div>\n  );\n}\n\nexport default RecoveredLineChart;\n","import React from \"react\";\nimport RecoveredBarChart from \"./RecoveredBarChart\";\nimport RecoveredLineChart from \"./RecoveredLineChart\";\n\nfunction RecoveredChart(props) {\n  const chartData = props.chartData;\n\n  return (\n    <div>\n      {props.dailyGraph ? (\n        <RecoveredBarChart chartData={chartData} />\n      ) : (\n        <RecoveredLineChart chartData={chartData} />\n      )}\n    </div>\n  );\n}\n\nexport default RecoveredChart;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport ActiveChart from \"../Chart/Active/ActiveChart\";\nimport ConfirmChart from \"../Chart/Confirmed/ConfirmChart\";\nimport DeathChart from \"../Chart/Death/DeathChart\";\nimport RecoveredChart from \"../Chart/Recovered/RecoveredChart\";\nimport styles from \"./Chart.module.scss\";\n\nconst Chart = () => {\n  const chartData = useSelector((state) => state.singleChartData);\n  const [dailyGraph, setDailyGraph] = useState(false);\n  return (\n    <div className={styles.chart}>\n      <div className={styles.chart__header}>\n        <h2>Spread Trends</h2>\n      </div>\n      <div className={styles.chart__button}>\n        <Button variant=\"contained\" onClick={() => setDailyGraph(false)}>\n          Culmative\n        </Button>\n        <Button variant=\"contained\" onClick={() => setDailyGraph(true)}>\n          Daily\n        </Button>\n      </div>\n      <ConfirmChart\n        className={styles.chart__confirmChart}\n        chartData={chartData}\n        dailyGraph={dailyGraph}\n      />\n      <ActiveChart\n        className={styles.chart__activeChart}\n        chartData={chartData}\n        dailyGraph={dailyGraph}\n      />\n      <RecoveredChart\n        className={styles.chart__recoveredChart}\n        chartData={chartData}\n        dailyGraph={dailyGraph}\n      />\n      <DeathChart\n        className={styles.chart__deathChart}\n        chartData={chartData}\n        dailyGraph={dailyGraph}\n      />\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport styles from \"./Country.module.scss\";\n\nconst Country = () => {\n  return (\n    <div>\n      <div className={styles.Search}>\n        <label>Search your state</label>\n        <input />\n      </div>\n    </div>\n  );\n};\n\nexport default Country;\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./GlobalCards.module.scss\";\nimport { useSelector } from \"react-redux\";\n\nconst GlobalCards = (props) => {\n  const [globalCardData, setGlobalCardData] = useState(null);\n  const globalData = useSelector((state) => state.globalData);\n\n  useEffect(() => {\n    setGlobalCardData(globalData);\n  }, [globalData]);\n\n  return (\n    <div className={styles.GlobalCards}>\n      <div className={styles.GlobalCards__date}>\n        <span>{new Date().toDateString()}</span>\n      </div>\n      <div className={styles.GlobalCards__caseDetails}>\n        <div className={styles.confirmed}>\n          <div>\n            <h5>Confirmed</h5>\n          </div>\n          <div>\n            <h4>[+{globalCardData ? globalCardData.deltaconfirmed : 0}]</h4>\n          </div>\n          <div>\n            <h2>{globalCardData ? globalCardData.confirmed : 0}</h2>\n          </div>\n        </div>\n        <div className={styles.active}>\n          <div>\n            <h5>Active</h5>\n          </div>\n          <div>\n            <h4>&nbsp;</h4>\n          </div>\n          <div>\n            <h2>{globalCardData ? globalCardData.active : 0}</h2>\n          </div>\n        </div>\n        <div className={styles.recovered}>\n          <div>\n            <h5>Recovered</h5>\n          </div>\n          <div>\n            <h4>[+{globalCardData ? globalCardData.deltarecovered : 0}]</h4>\n          </div>\n          <div>\n            <h2>{globalCardData ? globalCardData.recovered : 0}</h2>\n          </div>\n        </div>\n        <div className={styles.deceased}>\n          <div>\n            <h5>Deceased</h5>\n          </div>\n          <div>\n            <h4>[+{globalCardData ? globalCardData.deltadeaths : 0}]</h4>\n          </div>\n          <div>\n            <h2>{globalCardData ? globalCardData.deaths : 0}</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalCards;\n","import React, { useState, useEffect } from \"react\";\nimport cx from \"classnames\";\nimport styles from \"./StateCards.module.scss\";\nimport { useSelector } from \"react-redux\";\n\nconst StateCards = () => {\n  const [stateCardData, setStateCardData] = useState(null);\n  const stateCardSelector = useSelector((state) => state.singleStateData);\n\n  useEffect(() => {\n    setStateCardData(stateCardSelector);\n  }, [stateCardSelector]);\n\n  return (\n    <div className={styles.stateCard}>\n      <div className={styles.stateCard__header}>India Map</div>\n      <div className={styles.stateCard__sub_header}>\n        Hover over a state/UT for more detailsp\n      </div>\n      <div className={styles.map_stats}>\n        <div className={styles.card}>\n          <div className={cx(styles.card__section, styles.confirm)}>\n            <h5>Confirmed</h5>\n            <h4>{stateCardData ? stateCardData.confirmed : 0}</h4>\n            <h5>+{stateCardData ? stateCardData.deltaconfirmed : 0}</h5>\n          </div>\n          <div className={cx(styles.card__section, styles.active)}>\n            <h5>Active</h5>\n            <h4>{stateCardData ? stateCardData.active : 0}</h4>\n            <h5>&nbsp;</h5>\n          </div>\n          <div className={cx(styles.card__section, styles.recovered)}>\n            <h5>Recovered</h5>\n            <h4>{stateCardData ? stateCardData.recovered : 0}</h4>\n            <h5>+{stateCardData ? stateCardData.deltarecovered : 0}</h5>\n          </div>\n          <div className={cx(styles.card__section, styles.death)}>\n            <h5>Deceased</h5>\n            <h4>{stateCardData ? stateCardData.deaths : 0}</h4>\n            <h5>+{stateCardData ? stateCardData.deltadeaths : 0}</h5>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StateCards;\n","import axios from \"axios\";\n\nexport const fetchAllAPI = async () => {\n  try {\n    const {\n      data: { cases_time_series, statewise },\n    } = await axios.get(`https://api.covid19india.org/data.json`);\n    const {\n      data: { states_daily },\n    } = await axios.get(`https://api.covid19india.org/states_daily.json`);\n    const ModifiedData = {\n      tillDateData: cases_time_series,\n      stateData: statewise,\n      globalData: statewise[0],\n      stateWiseDailyData: states_daily,\n    };\n    return ModifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { fetchAllAPI } from \"../Api\";\n\nexport const getAllData = () => {\n  return (dispatch) => {\n    fetchAllAPI()\n      .then((res) => {\n        if (res) {\n          dispatch({\n            type: \"SET_ALL_DATA\",\n            res,\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\nexport const setSingleStateData = (data) => {\n  return (dispatch) => {\n    if (data) {\n      dispatch({\n        type: \"GET_SINGLE_STATE_DATA\",\n        data,\n      });\n    }\n  };\n};\n\nexport const setChartData = (chartData, stateName) => {\n  return (dispatch) => {\n    const stateDailyData = {\n      date: [],\n      dailyRecovered: [],\n      dailyConfirmed: [],\n      dailyDeceased: [],\n      dailyActive: [],\n      culmativeRecovered: [],\n      culmativeConfirmed: [],\n      culmativeDeceased: [],\n      culmativeActive: [],\n    };\n\n    let previousDate = true;\n    chartData.map((val) => {\n      if (stateDailyData.date.indexOf(val.date) === -1 || previousDate) {\n        stateDailyData.date.push(val.date);\n        previousDate = false;\n      }\n      let name = stateName.toLowerCase();\n      switch (val.status) {\n        case \"Confirmed\":\n          stateDailyData.dailyConfirmed.push(parseInt(val[name]));\n          if (stateDailyData.culmativeConfirmed.length) {\n            stateDailyData.culmativeConfirmed.push(\n              stateDailyData.culmativeConfirmed[\n                stateDailyData.culmativeConfirmed.length - 1\n              ] + parseInt(val[name])\n            );\n          } else {\n            stateDailyData.culmativeConfirmed.push(parseInt(val[name]));\n          }\n\n          return true;\n        case \"Recovered\":\n          stateDailyData.dailyRecovered.push(parseInt(val[name]));\n          if (stateDailyData.culmativeRecovered.length) {\n            stateDailyData.culmativeRecovered.push(\n              stateDailyData.culmativeRecovered[\n                stateDailyData.culmativeRecovered.length - 1\n              ] + parseInt(val[name])\n            );\n          } else {\n            stateDailyData.culmativeRecovered.push(parseInt(val[name]));\n          }\n          return true;\n        case \"Deceased\":\n          stateDailyData.dailyDeceased.push(parseInt(val[name]));\n          if (stateDailyData.culmativeDeceased.length) {\n            stateDailyData.culmativeDeceased.push(\n              stateDailyData.culmativeDeceased[\n                stateDailyData.culmativeDeceased.length - 1\n              ] + parseInt(val[name])\n            );\n          } else {\n            stateDailyData.culmativeDeceased.push(parseInt(val[name]));\n          }\n          return true;\n        default:\n          return true;\n      }\n    });\n    stateDailyData.dailyConfirmed.map((val, i) => {\n      stateDailyData.dailyActive.push(\n        stateDailyData.dailyConfirmed[i] -\n          (stateDailyData.dailyRecovered[i] - stateDailyData.dailyDeceased[i])\n      );\n      stateDailyData.culmativeActive.push(\n        stateDailyData.culmativeConfirmed[i] -\n          (stateDailyData.culmativeRecovered[i] -\n            stateDailyData.culmativeDeceased[i])\n      );\n    });\n    if (stateDailyData) {\n      dispatch({\n        type: \"SET_SINGLE_STATE_CHART\",\n        stateDailyData,\n      });\n    }\n  };\n};\n","import React, { useEffect } from \"react\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport CountUp from \"react-countup\";\nimport styles from \"./Table.module.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSingleStateData, setChartData } from \"../../store/Action\";\n\nconst Tables = () => {\n  const stateData = useSelector((state) => state.allStateData);\n  const chartData = useSelector((state) => state.chartData);\n  const dispatch = useDispatch();\n\n  const CountUpComponent = (start, end) => {\n    return (\n      <CountUp end={parseInt(end)} separator=\",\" start={parseInt(start)} />\n    );\n  };\n\n  useEffect(() => {\n    if (chartData) {\n      dispatch(setChartData(chartData, \"TT\"));\n    }\n  });\n\n  const onHover = (e, data) => {\n    dispatch(setSingleStateData(data));\n    dispatch(setChartData(chartData, data.statecode));\n  };\n\n  return (\n    <div>\n      <div className={styles.table__header}>\n        <h5>\n          Compiled from State Govt. numbers,\n          <span> know more!</span>\n        </h5>\n      </div>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <td>\n              <div className={styles.heading_content}>State/UT</div>\n            </td>\n            <td>\n              <div className={styles.heading_content}>Confirmed</div>\n            </td>\n            <td>\n              <div className={styles.heading_content}>Active</div>\n            </td>\n            <td>\n              <div className={styles.heading_content}>Recovered</div>\n            </td>\n            <td>\n              <div className={styles.heading_content}>Deceased</div>\n            </td>\n          </tr>\n        </thead>\n        <tbody>\n          {stateData\n            ? stateData.map((val, i) => {\n                return i && val.confirmed !== \"0\" ? (\n                  <tr key={i} onMouseEnter={(e) => onHover(e, val)}>\n                    <td className={styles.state}>{val.state}</td>\n                    <td className={styles.confirmed} align=\"right\">\n                      {val.deltaconfirmed !== \"0\" ? (\n                        <span className={styles.deltaConfirmed}>\n                          <ArrowUpwardIcon />\n                          {val.deltaconfirmed}\n                        </span>\n                      ) : null}\n                      {val.confirmed !== \"0\"\n                        ? CountUpComponent(val.confirmed, val.confirmed)\n                        : \"-\"}\n                    </td>\n                    <td className={styles.active} align=\"right\">\n                      {val.active !== \"0\"\n                        ? CountUpComponent(val.active, val.active)\n                        : \"-\"}\n                    </td>\n                    <td className={styles.recovered} align=\"right\">\n                      {val.deltarecovered !== \"0\" ? (\n                        <span className={styles.deltaRecovered}>\n                          <ArrowUpwardIcon />\n                          {val.deltarecovered}\n                        </span>\n                      ) : null}\n                      {val.recovered !== \"0\"\n                        ? CountUpComponent(val.recovered, val.recovered)\n                        : \"-\"}\n                    </td>\n                    <td className={styles.deceased} align=\"right\">\n                      {val.deltadeaths !== \"0\" ? (\n                        <span className={styles.deltaDeacesed}>\n                          <ArrowUpwardIcon />\n                          {val.deltadeaths}\n                        </span>\n                      ) : null}\n                      {val.deaths !== \"0\"\n                        ? CountUpComponent(val.deaths, val.deaths)\n                        : \"-\"}\n                    </td>\n                  </tr>\n                ) : null;\n              })\n            : null}\n          {stateData ? (\n            <tr key={0} onMouseEnter={(e) => onHover(e, stateData[0])}>\n              <td className={styles.state}>{stateData[0].state}</td>\n              <td className={styles.confirmed} align=\"right\">\n                {stateData[0].deltaconfirmed !== \"0\" ? (\n                  <span className={styles.deltaConfirmed}>\n                    {\" \"}\n                    <ArrowUpwardIcon />\n                    {stateData[0].deltaconfirmed}\n                  </span>\n                ) : null}\n                {stateData[0].confirmed !== \"0\"\n                  ? CountUpComponent(\n                      stateData[0].confirmed,\n                      stateData[0].confirmed\n                    )\n                  : \"-\"}\n              </td>\n              <td className={styles.active} align=\"right\">\n                {stateData[0].active !== \"0\"\n                  ? CountUpComponent(stateData[0].active, stateData[0].active)\n                  : \"-\"}\n              </td>\n              <td className={styles.recovered} align=\"right\">\n                {stateData[0].deltarecovered !== \"0\" ? (\n                  <span className={styles.deltaRecovered}>\n                    {\" \"}\n                    <ArrowUpwardIcon />\n                    {stateData[0].deltarecovered}\n                  </span>\n                ) : null}\n                {stateData[0].recovered !== \"0\"\n                  ? CountUpComponent(\n                      stateData[0].recovered,\n                      stateData[0].recovered\n                    )\n                  : \"-\"}\n              </td>\n              <td className={styles.deceased} align=\"right\">\n                {stateData[0].deltadeaths !== \"0\" ? (\n                  <span className={styles.deltaDeacesed}>\n                    {\" \"}\n                    <ArrowUpwardIcon />\n                    {stateData[0].deltadeaths}\n                  </span>\n                ) : null}\n                {stateData[0].deceased !== \"0\"\n                  ? CountUpComponent(\n                      stateData[0].deceased,\n                      stateData[0].deceased\n                    )\n                  : \"-\"}\n              </td>\n            </tr>\n          ) : null}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Tables;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  GlobalCards,\n  Tables,\n  StateCards,\n  Country,\n  Chart,\n} from \"../../components\";\n\nimport styles from \"./Home.module.css\";\nimport { getAllData } from \"../../store/Action\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllData());\n  });\n\n  return (\n    <div className={styles.Home}>\n      <div className={styles.homeLeft}>\n        <Country />\n        <GlobalCards />\n        <Tables />\n      </div>\n      <div className={styles.homeRight}>\n        <StateCards />\n        <Chart />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Home from \"./components/Home/Home\";\nimport styles from \"./App.module.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.container}>\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  globalData: null,\n  allStateData: null,\n  singleStateData: null,\n  chartData: null,\n  singleChartData: null,\n};\n\nconst Reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_ALL_DATA\":\n      return {\n        ...state,\n        globalData: action.res.globalData,\n        allStateData: action.res.stateData,\n        singleStateData: action.res.globalData,\n        chartData: action.res.stateWiseDailyData,\n      };\n    case \"GET_ALL_STATE_DATA\":\n      return {\n        ...state,\n        allStateData: action,\n      };\n    case \"GET_SINGLE_STATE_DATA\":\n      return {\n        ...state,\n        singleStateData: action.data,\n      };\n    case \"SET_SINGLE_STATE_CHART\":\n      return {\n        ...state,\n        singleChartData: action.stateDailyData,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport Reducer from \"./store/Reducer\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(Reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart__header\":\"Chart_chart__header__2gzJX\",\"chart__button\":\"Chart_chart__button__2uAea\",\"chart__confirmChart\":\"Chart_chart__confirmChart__3ZelZ\",\"chart__activeChart\":\"Chart_chart__activeChart__3TpY0\",\"chart__recoveredChart\":\"Chart_chart__recoveredChart__mF62u\",\"chart__deathChart\":\"Chart_chart__deathChart__1MxYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__Hrybx\",\"homeLeft\":\"Home_homeLeft__162Vc\",\"homeRight\":\"Home_homeRight__6tYZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table__header\":\"Table_table__header__3xq01\",\"confirmed\":\"Table_confirmed__3UhRC\",\"recovered\":\"Table_recovered__AGJEk\",\"active\":\"Table_active__198ot\",\"state\":\"Table_state__1Do0C\",\"deceased\":\"Table_deceased__23j-5\",\"deltaConfirmed\":\"Table_deltaConfirmed__SSwzF\",\"deltaRecovered\":\"Table_deltaRecovered__3xZR_\",\"deltaDeacesed\":\"Table_deltaDeacesed__2j9Rl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Country_Search__2DhFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stateCard\":\"StateCards_stateCard__CllcD\",\"stateCard__header\":\"StateCards_stateCard__header__VpHPb\",\"stateCard__sub_header\":\"StateCards_stateCard__sub_header__3AmUI\",\"map_stats\":\"StateCards_map_stats__2G5nr\",\"card\":\"StateCards_card__3knjl\",\"card__section\":\"StateCards_card__section__1XyH-\",\"confirm\":\"StateCards_confirm__2d3Y2\",\"active\":\"StateCards_active__1-uhF\",\"recovered\":\"StateCards_recovered__3NCwH\",\"death\":\"StateCards_death__2oQpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}